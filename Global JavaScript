// Global JavaScript - זהו קוד שרץ פעם אחת בטעינת האפליקציה של Retool
// הוא אחראי לנהל את מחזור החיים של חיבור ה-WebSocket הכללי.

// שמור את ה-chatId האחרון שראינו (כדי לזהות שינויים ב-URL)
let lastMonitoredChatId = null;

// פונקציה שתופעל באופן קבוע כדי לבדוק את מצב ה-URL והחיבור
function monitorUrlAndConnectWebSocket() {
    // קריאת פרמטר 'id' מה-URL הנוכחי
    const urlParams = new URLSearchParams(window.location.search);
    const currentChatIdFromUrl = urlParams.get('id');

    // קריאת פרטי המשתמש מ-localStorage (כפי שהתקנת)
    let currentUserData = null;
    try {
        const currentUserString = localStorage.getItem('currentUser');
        if (currentUserString) {
            currentUserData = JSON.parse(currentUserString);
        }
    } catch (e) {
        console.error('Global JS: Error parsing currentUser from localStorage:', e);
        // אם הנתונים פגומים, ננתק חיבור קיים כדי למנוע בעיות
        if (window.myGlobalWebSocket && window.myGlobalWebSocket.readyState === WebSocket.OPEN) {
            window.myGlobalWebSocket.close(1008, 'Corrupt user data');
            window.myGlobalWebSocket = null;
        }
        return; // אל תמשיך בלי פרטי משתמש
    }

    // וודא שיש לנו פרטי משתמש תקינים
    if (!currentUserData || !currentUserData.id || !currentUserData.username) {
        console.warn('Global JS: Current user data (id/username) not available in localStorage. Cannot initiate/manage WebSocket connection.');
        // אם יש חיבור WebSocket פתוח שקשור למשתמש, סגור אותו כי אין פרטי משתמש.
        if (window.myGlobalWebSocket && window.myGlobalWebSocket.readyState === WebSocket.OPEN) {
            window.myGlobalWebSocket.close(1008, 'User data missing');
            window.myGlobalWebSocket = null;
        } else if (window.myGlobalWebSocket && window.myGlobalWebSocket.readyState !== WebSocket.CLOSED) {
             window.myGlobalWebSocket.terminate();
             window.myGlobalWebSocket = null;
        }
        return; // אל תמשיך לנסות לחבר
    }

    // קריאה ל-connectWebSocket Query:
    // נפעיל את Query `connectWebSocket` רק אם:
    // 1. יש `chatId` חוקי ב-URL ו-`chatId` השתנה, או שאין חיבור בכלל.
    // 2. או שאין `chatId` ב-URL, אבל היה `chatId` קודם (כלומר, עזבנו עמוד צ'אט), ועדיין יש חיבור.
    
    // תרחיש 1: נמצאים כרגע בעמוד צ'אט (עם ID חוקי)
    if (currentChatIdFromUrl && currentChatIdFromUrl.length > 5) {
        // אם ה-chatId השתנה, או שאין חיבור בכלל, או שהחיבור קיים אבל לאותו צ'אט (צריך לוודא שהוא אכן נשאר מחובר)
        if (
            currentChatIdFromUrl !== lastMonitoredChatId || // שינוי ל-chatId חדש
            !window.myGlobalWebSocket || // אין חיבור קיים
            (window.myGlobalWebSocket && window.myGlobalWebSocket.readyState !== WebSocket.OPEN) || // החיבור לא פתוח
            (window.myGlobalWebSocket && window.myGlobalWebSocket.metadata && window.myGlobalWebSocket.metadata.chat_id !== currentChatIdFromUrl) // מחובר אבל לצ'אט אחר
        ) {
            console.log(`Global JS: Initiating/Re-initiating WebSocket connection for chat: ${currentChatIdFromUrl}.`);
            connectWebSocket.trigger({
                additionalScope: {
                    chat_id_param: currentChatIdFromUrl,
                    user_id_param: currentUserData.id,
                    username_param: currentUserData.username
                }
            });
        }
    } 
    // תרחיש 2: עזבנו עמוד צ'אט (ה-chatId מה-URL נעלם או אינו חוקי)
    else if (!currentChatIdFromUrl && lastMonitoredChatId) { // אם ה-chatId נעלם, אבל קודם היינו בצ'אט
        console.log(`Global JS: Detected departure from chat page (old chat ID: ${lastMonitoredChatId}).`);
        // אם החיבור פתוח, ננסה לסגור אותו בצורה נקייה
        if (window.myGlobalWebSocket && window.myGlobalWebSocket.readyState === WebSocket.OPEN) {
            window.myGlobalWebSocket.close(1000, 'Left chat page');
            window.myGlobalWebSocket = null; // נקה את ההפניה
        } else if (window.myGlobalWebSocket && window.myGlobalWebSocket.readyState !== WebSocket.CLOSED) {
             window.myGlobalWebSocket.terminate();
             window.myGlobalWebSocket = null;
        }
    }
    // תרחיש 3: נמצאים בעמוד שאינו צ'אט, וגם לא עזבנו הרגע צ'אט, ויש חיבור WebSocket כללי.
    // במצב זה, נותנים ל-Heartbeat של השרת לנתק אם החיבור לא אקטיבי.
    // או אם יש חיבור כללי תקוע, ננתק אותו.
    else if (!currentChatIdFromUrl && !lastMonitoredChatId && window.myGlobalWebSocket && window.myGlobalWebSocket.readyState === WebSocket.OPEN) {
        console.log("Global JS: No chat ID, and no previous chat ID. General WebSocket active.");
        // ניתן להוסיף כאן לוגיקה לניתוק חיבורים "כלליים" אם הם לא נכנסים לצ'אט תוך זמן מסוים
        // כרגע ה-Heartbeat בשרת אמור לטפל בזה.
    }


    // עדכון ה-chatId האחרון שנבדק
    lastMonitoredChatId = currentChatIdFromUrl;
}

// הפעל את הפונקציה הזו כל כמה זמן (לדוגמה, כל 500 מילישניות)
// זה יאפשר ל-Retool לזהות שינויים ב-URL גם ללא רענון עמוד מלא.
setInterval(monitorUrlAndConnectWebSocket, 500);
